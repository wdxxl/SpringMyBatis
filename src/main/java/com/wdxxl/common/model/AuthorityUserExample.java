package com.wdxxl.common.model;

import java.util.ArrayList;
import java.util.List;

public class AuthorityUserExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public AuthorityUserExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNull() {
			addCriterion("username is null");
			return (Criteria) this;
		}

		public Criteria andUsernameIsNotNull() {
			addCriterion("username is not null");
			return (Criteria) this;
		}

		public Criteria andUsernameEqualTo(String value) {
			addCriterion("username =", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotEqualTo(String value) {
			addCriterion("username <>", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThan(String value) {
			addCriterion("username >", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameGreaterThanOrEqualTo(String value) {
			addCriterion("username >=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThan(String value) {
			addCriterion("username <", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLessThanOrEqualTo(String value) {
			addCriterion("username <=", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameLike(String value) {
			addCriterion("username like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotLike(String value) {
			addCriterion("username not like", value, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameIn(List<String> values) {
			addCriterion("username in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotIn(List<String> values) {
			addCriterion("username not in", values, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameBetween(String value1, String value2) {
			addCriterion("username between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andUsernameNotBetween(String value1, String value2) {
			addCriterion("username not between", value1, value2, "username");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNull() {
			addCriterion("password is null");
			return (Criteria) this;
		}

		public Criteria andPasswordIsNotNull() {
			addCriterion("password is not null");
			return (Criteria) this;
		}

		public Criteria andPasswordEqualTo(String value) {
			addCriterion("password =", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotEqualTo(String value) {
			addCriterion("password <>", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThan(String value) {
			addCriterion("password >", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordGreaterThanOrEqualTo(String value) {
			addCriterion("password >=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThan(String value) {
			addCriterion("password <", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLessThanOrEqualTo(String value) {
			addCriterion("password <=", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordLike(String value) {
			addCriterion("password like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotLike(String value) {
			addCriterion("password not like", value, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordIn(List<String> values) {
			addCriterion("password in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotIn(List<String> values) {
			addCriterion("password not in", values, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordBetween(String value1, String value2) {
			addCriterion("password between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andPasswordNotBetween(String value1, String value2) {
			addCriterion("password not between", value1, value2, "password");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIsNull() {
			addCriterion("display_name is null");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIsNotNull() {
			addCriterion("display_name is not null");
			return (Criteria) this;
		}

		public Criteria andDisplayNameEqualTo(String value) {
			addCriterion("display_name =", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotEqualTo(String value) {
			addCriterion("display_name <>", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameGreaterThan(String value) {
			addCriterion("display_name >", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameGreaterThanOrEqualTo(String value) {
			addCriterion("display_name >=", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLessThan(String value) {
			addCriterion("display_name <", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLessThanOrEqualTo(String value) {
			addCriterion("display_name <=", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameLike(String value) {
			addCriterion("display_name like", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotLike(String value) {
			addCriterion("display_name not like", value, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameIn(List<String> values) {
			addCriterion("display_name in", values, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotIn(List<String> values) {
			addCriterion("display_name not in", values, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameBetween(String value1, String value2) {
			addCriterion("display_name between", value1, value2, "displayName");
			return (Criteria) this;
		}

		public Criteria andDisplayNameNotBetween(String value1, String value2) {
			addCriterion("display_name not between", value1, value2,
					"displayName");
			return (Criteria) this;
		}

		public Criteria andIsActiveIsNull() {
			addCriterion("is_active is null");
			return (Criteria) this;
		}

		public Criteria andIsActiveIsNotNull() {
			addCriterion("is_active is not null");
			return (Criteria) this;
		}

		public Criteria andIsActiveEqualTo(Integer value) {
			addCriterion("is_active =", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveNotEqualTo(Integer value) {
			addCriterion("is_active <>", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveGreaterThan(Integer value) {
			addCriterion("is_active >", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_active >=", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveLessThan(Integer value) {
			addCriterion("is_active <", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveLessThanOrEqualTo(Integer value) {
			addCriterion("is_active <=", value, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveIn(List<Integer> values) {
			addCriterion("is_active in", values, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveNotIn(List<Integer> values) {
			addCriterion("is_active not in", values, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveBetween(Integer value1, Integer value2) {
			addCriterion("is_active between", value1, value2, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsActiveNotBetween(Integer value1, Integer value2) {
			addCriterion("is_active not between", value1, value2, "isActive");
			return (Criteria) this;
		}

		public Criteria andIsAdminIsNull() {
			addCriterion("is_admin is null");
			return (Criteria) this;
		}

		public Criteria andIsAdminIsNotNull() {
			addCriterion("is_admin is not null");
			return (Criteria) this;
		}

		public Criteria andIsAdminEqualTo(Integer value) {
			addCriterion("is_admin =", value, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminNotEqualTo(Integer value) {
			addCriterion("is_admin <>", value, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminGreaterThan(Integer value) {
			addCriterion("is_admin >", value, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminGreaterThanOrEqualTo(Integer value) {
			addCriterion("is_admin >=", value, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminLessThan(Integer value) {
			addCriterion("is_admin <", value, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminLessThanOrEqualTo(Integer value) {
			addCriterion("is_admin <=", value, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminIn(List<Integer> values) {
			addCriterion("is_admin in", values, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminNotIn(List<Integer> values) {
			addCriterion("is_admin not in", values, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminBetween(Integer value1, Integer value2) {
			addCriterion("is_admin between", value1, value2, "isAdmin");
			return (Criteria) this;
		}

		public Criteria andIsAdminNotBetween(Integer value1, Integer value2) {
			addCriterion("is_admin not between", value1, value2, "isAdmin");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table authority_user
	 * @mbggenerated  Thu Jun 19 00:46:09 CST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table authority_user
	 * @mbggenerated  do_not_delete_during_merge Wed Jun 18 23:15:13 CST 2014
	 */
	public static class Criteria extends GeneratedCriteria {
		protected Criteria() {
			super();
		}
	}
}